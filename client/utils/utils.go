package utils

import (
	"bytes"
	"net/http"
	"os/exec"
)

func GetCommandOutput(command string, args ...string) (string, error) {
	//fmt.Print(args)
	cmd := exec.Command(command, args...)
	var out bytes.Buffer
	cmd.Stdout = &out
	err := cmd.Run()
	if err != nil {
		return "", err
	}
	return out.String(), nil
}

func RemoveRepByMap(slc []string) []string {
	result := []string{}
	tempMap := map[string]byte{} // 存放不重复主键
	for _, e := range slc {
		l := len(tempMap)
		tempMap[e] = 0 //当e存在于tempMap中时，再次添加是添加不进去的，，因为key不允许重复
		//如果上一行添加成功，那么长度发生变化且此时元素一定不重复
		if len(tempMap) != l { // 加入map后，map长度变化，则元素不重复
			result = append(result, e) //当元素不重复时，将元素添加到切片result中
		}
	}
	return result
}

// SubmitRes 提交结果至server
func SubmitRes(res string, server string) error {
	rsps, err := http.Post(server, "plain/text", bytes.NewBuffer([]byte(res)))
	if err != nil {
		//fmt.Println("Request failed:", err)
		return err
	}
	defer rsps.Body.Close()
	return nil
}
