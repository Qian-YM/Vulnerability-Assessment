package main

import (
	"fmt"
	"github.com/urfave/cli/v2"
	"log"
	"os"
	"sort"
	"time"
	xray_requests "vulAssess/depot/pocV/pkg/xray/requests"
	"vulAssess/depot/pocV/utils"
	"vulAssess/exploit"
	banner "vulAssess/utils"
)

const (
	__version__ = "v0.0.1"
)

var (
	targetFile string
)

// TODO: 整理代码，统一错误处理
func main() {
	app := &cli.App{
		Name:    "VulAssess",
		Usage:   "An Vulnerability Assessment tool",
		Version: __version__,
		Flags: []cli.Flag{
			&cli.StringFlag{Name: "targetFile", Aliases: []string{"l"}, Destination: &targetFile, Value: "", Usage: "load targets from `FILE`"},
		},
		Action: func(*cli.Context) error {
			banner.Banner()
			switch {
			case targetFile != "":
				err := exploit.GetTargets(targetFile)
				if err != nil {
					return err
				}

				utils.InitLog(false, true)
				xray_requests.InitHttpClient(10, "", time.Duration(20)*time.Second)
				xray_requests.InitCache(2)

				exploit.InitCheck(10000, 100)
				outputChannel := make(chan *exploit.Result)
				exploit.Start(outputChannel)
				go exploit.Wait()
				exploit.GetResult()

			default:
				fmt.Println("use -h for help")
			}
			return nil
		},
	}

	sort.Sort(cli.FlagsByName(app.Flags))
	sort.Sort(cli.CommandsByName(app.Commands))

	if err := app.Run(os.Args); err != nil {
		log.Fatal(err)
	}
}
