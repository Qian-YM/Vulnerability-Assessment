package main
import(
	"os"
    "os/exec"
    "fmt"
)

func bashCheck() {
    printMsg("## Bash配置检查")

    // 查看history文件
    printMsg("### History文件")
    printCode(getCommandOutput("bash", "-c", "ls -alht /root/.*_history"))

    // 查看history敏感操作
    printMsg("### History敏感操作")
    cmd := exec.Command("bash", "-c", `
    cat ~/.*history | strings | grep -P '(?<![0-9])(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))(?![0-9])|http://|https://|\bssh\b|\bscp\b|\.tar|\bwget\b|\bcurl\b|\bnc\b|\btelnet\b|\bbash\b|\bsh\b|\bchmod\b|\bchown\b|/etc/passwd|/etc/shadow|/etc/hosts|\bnmap\b|\bfrp\b|\bnfs\b|\bsshd\b|\bmodprobe\b|\blsmod\b|\bsudo\b|mysql\b|mysqldump' |
    egrep -v 'man\b|ag\b|cat\b|sed\b|git\b|docker\b|rm\b|touch\b|mv\b|\bapt\b|\bapt-get\b'
    `)
    output, err := cmd.CombinedOutput()
    if err != nil {
        fmt.Printf("命令执行错误: %v\n", err)
        return
    }
    printCode(string(output))
  

    // /etc/profile
    printMsg("### /etc/profile ")
    printCode(getCommandOutput("bash", "-c", "cat /etc/profile | egrep -v '#'"))

    // $HOME/.profile
    printMsg("### .profile ")
    printCode(getCommandOutput("bash", "-c", "cat $HOME/.profile | egrep -v '#'"))

    // /etc/rc.local
    printMsg("### /etc/rc.local ")
    printCode(getCommandOutput("bash", "-c", "cat /etc/rc.local | egrep -v '#'"))

    // ~/.bash_profile
    printMsg("### ~/.bash_profile ")
    if _, err := os.Stat(os.ExpandEnv("$HOME/.bash_profile")); err == nil {
        printCode(getCommandOutput("bash", "-c", "cat $HOME/.bash_profile | egrep -v '#'"))
    }

    // ~/.bashrc
    printMsg("### ~/.bashrc ")
    printCode(getCommandOutput("bash", "-c", "cat $HOME/.bashrc | egrep -v '#' | sort | uniq"))

    // ~/.zshrc
    printMsg("### ~/.zshrc ")
    printCode(getCommandOutput("bash", "-c", "cat $HOME/.zshrc | egrep -v '#' | sort | uniq"))
}
