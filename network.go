package main

import (
	"strings"
)

func networkCheck() {
	printMsg("## 网络/流量检查")

	// ifconfig
	printMsg("### ifconfig")
	printCode(getCommandOutput("/sbin/ifconfig", "-a"))

	// 网络流量
	printMsg("### 网络流量")
	printMsg("**Interface    ByteRec   PackRec   ByteTran   PackTran**")
	netstatCmd := "awk 'NR>2' /proc/net/dev | awk -F ':' '{print \"  \"$1\"  \"$2}' | awk '{print $1\"   \"$2\"    \"$3\"   \"$10\"  \"$11}'"
	printMsg(getCommandOutput("bash", "-c", netstatCmd))

	// 端口监听
	printMsg("### 端口监听")
	printCode(getCommandOutput("bash", "-c","netstat -tulpen | grep -P 'tcp|udp.*'"))

	// 对外开放端口
	printMsg("### 对外开放端口")
	printCode(getCommandOutput("bash", "-c","netstat -tulpen | awk '{print $1,$4}' | grep -P -o '.*0.0.0.0:(\\d+)|:::\\d+'"))

	// 网络连接
	printMsg("### 网络连接")
	printMsg("**TCP连接**")
	printCode(getCommandOutput("bash", "-c","netstat -antop | grep -P ESTAB"))
	printMsg("**UDP连接**")
	printCode(getCommandOutput("bash", "-c","netstat -anp | grep -P udp"))

	// 连接状态
	printMsg("### TCP连接状态")
	printCode(getCommandOutput("bash", "-c","netstat -n | awk '/^tcp/ {++S[$NF]} END {for(a in S) print a, S[a]}'"))

	// 路由表
	printMsg("### 路由表")
	printCode(getCommandOutput("/sbin/route", "-nee"))

	// 路由转发
	printMsg("### 路由转发")
	ipForward, _ := runCommand("cat", "/proc/sys/net/ipv4/ip_forward")
	ipForward = strings.TrimSpace(ipForward)
	if ipForward == "1" {
		printCode("/proc/sys/net/ipv4/ip_forward 已开启路由转发！")
	} else {
		printCode("该服务器未开启路由转发！")
	}

	// DNS Server
	printMsg("### DNS Server")
	printCode(getCommandOutput("bash", "-c", `grep -oP '\d+\.\d+\.\d+\.\d+' </etc/resolv.conf`))

	// ARP
	printMsg("### ARP")
	printCode(getCommandOutput("arp", "-n", "-a"))

	// 网卡混杂模式
	printMsg("### 网卡混杂模式")
	if strings.Contains(getCommandOutput("ip", "link"), "PROMISC") {
		printCode("网卡存在混杂模式！")
	} else {
		printCode("网卡不存在混杂模式！")
	}

	// IPTABLES防火墙
	printMsg("### IPTABLES防火墙")
	printCode(getCommandOutput("iptables", "-L"))
}

